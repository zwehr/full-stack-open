{"ast":null,"code":"var _jsxFileName = \"/Users/zwehr/Documents/programming/full-stack-open/part1/anecdotes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MostVotes = props => {\n  const arrFromProps = props.voteArr;\n  console.log(\"arr from props is\", arrFromProps);\n  console.log(typeof arrFromProps);\n  const definitelyAnArr = [3, 2, 1];\n  console.log(\"def an arr\", definitelyAnArr); //const maxFromArr = Math.max(...arrFromProps)\n  //console.log(maxFromArr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anecdote with most votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"to do after fixing error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MostVotes;\n\nconst App = () => {\n  _s();\n\n  const anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.', 'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients'];\n  const [voteCount, setVoteCount] = useState([0, 0, 0, 0, 0, 0, 0]);\n  console.log(\"inital vote counte should be arr\", voteCount);\n  const [selected, setSelected] = useState(0);\n\n  const handleVote = () => {\n    const newVoteCount = [...voteCount];\n    newVoteCount[selected]++;\n    setVoteCount(newVoteCount);\n    console.log(\"newVoteCount is\", newVoteCount);\n    console.log(typeof newVoteCount);\n  };\n\n  const handleNew = () => {\n    const newRandomNum = Math.floor(Math.random() * 7);\n    setSelected(newRandomNum);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anecdote of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: anecdotes[selected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"has \", voteCount[selected], \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVote,\n      children: \"vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNew,\n      children: \"next anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MostVotes, {\n      voteArr: voteCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"05gKbBbh4SzqV4HsJSU6r+Pt9v8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MostVotes\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/zwehr/Documents/programming/full-stack-open/part1/anecdotes/src/App.js"],"names":["React","useState","MostVotes","props","arrFromProps","voteArr","console","log","definitelyAnArr","App","anecdotes","voteCount","setVoteCount","selected","setSelected","handleVote","newVoteCount","handleNew","newRandomNum","Math","floor","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,YAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,YAAnB;AACA,QAAMI,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAxB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,eAA1B,EAL2B,CAM3B;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;KAAMN,S;;AAiBN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAG,CAChB,+BADgB,EAEhB,4DAFgB,EAGhB,8LAHgB,EAIhB,iHAJgB,EAKhB,iDALgB,EAMhB,oLANgB,EAOhB,qJAPgB,CAAlB;AAUA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAA1C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDI,SAAhD;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACvB,UAAMC,YAAY,GAAG,CAAC,GAAGL,SAAJ,CAArB;AACAK,IAAAA,YAAY,CAACH,QAAD,CAAZ;AACAD,IAAAA,YAAY,CAACI,YAAD,CAAZ;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,YAA/B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOS,YAAnB;AACD,GAND;;AAQA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAP,IAAAA,WAAW,CAACI,YAAD,CAAX;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIR,SAAS,CAACG,QAAD;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAAQF,SAAS,CAACE,QAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtCD;;GAAMF,G;;MAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst MostVotes = (props) => {\n  const arrFromProps = props.voteArr\n  console.log(\"arr from props is\", arrFromProps)\n  console.log(typeof arrFromProps)\n  const definitelyAnArr = [3, 2, 1]\n  console.log(\"def an arr\", definitelyAnArr)\n  //const maxFromArr = Math.max(...arrFromProps)\n  //console.log(maxFromArr)\n\n  return (\n    <div>\n      <h1>Anecdote with most votes</h1>\n      <p>to do after fixing error</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const anecdotes = [\n    'If it hurts, do it more often',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n    'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients'\n  ]\n\n  const [voteCount, setVoteCount] = useState([0, 0, 0, 0, 0, 0, 0])\n  console.log(\"inital vote counte should be arr\", voteCount)\n  const [selected, setSelected] = useState(0)\n\n  const handleVote = () => {\n    const newVoteCount = [...voteCount];\n    newVoteCount[selected]++;\n    setVoteCount(newVoteCount)\n    console.log(\"newVoteCount is\", newVoteCount)\n    console.log(typeof newVoteCount)\n  }\n\n  const handleNew = () => {\n    const newRandomNum = Math.floor(Math.random() * 7)\n    setSelected(newRandomNum)\n  }\n\n  return (\n    <div>\n      <h1>Anecdote of the day</h1>\n      <p>{anecdotes[selected]}</p>\n      <p>has {voteCount[selected]} votes</p>\n      <button onClick={handleVote}>vote</button>\n      <button onClick={handleNew}>next anecdote</button>\n      <MostVotes voteArr={voteCount} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}