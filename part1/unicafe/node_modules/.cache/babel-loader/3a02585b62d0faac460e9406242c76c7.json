{"ast":null,"code":"var _jsxFileName = \"/Users/zwehr/Documents/programming/full-stack-open/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  const all = props.good + props.neutral + props.bad;\n\n  if (all > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: props.good\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"neutral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: props.neutral\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"bad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: props.bad\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: all\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (props.good - props.bad) / all\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"good \", props.good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"neutral \", props.neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bad \", props.bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"all \", all]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"average \", (props.good - props.bad) / all]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"positive \", props.good / all * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  //save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uTssgC4nlUSepBgkUpbW/ujAc84=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/zwehr/Documents/programming/full-stack-open/part1/unicafe/src/App.js"],"names":["React","useState","Statistics","props","all","good","neutral","bad","App","setGood","setNeutral","setBad","setAll","handleGood","handleNeutral","handleBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = (props) => {\n  const all = props.good + props.neutral + props.bad\n\n  if (all > 0) {\n    return (\n      <div>\n        <h2>statistics</h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>good</td>\n              <td>{props.good}</td>\n            </tr>\n            <tr>\n              <td>neutral</td>\n              <td>{props.neutral}</td>\n            </tr>\n            <tr>\n              <td>bad</td>\n              <td>{props.bad}</td>\n            </tr>\n            <tr>\n              <td>all</td>\n              <td>{all}</td>\n            </tr>\n            <tr>\n              <td>average</td>\n              <td>{(props.good - props.bad) / all}</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n\n        <p>good {props.good}</p>\n        <p>neutral {props.neutral}</p>\n        <p>bad {props.bad}</p>\n        <p>all {all}</p>\n        <p>average {(props.good - props.bad) / all}</p>\n        <p>positive {props.good / all * 100}%</p>\n      </div>\n    )\n  } else return (\n    <div>\n      <h2>statistics</h2>\n      <p>No feedback given</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  //save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n    setAll(all + 1)\n  }\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n  }\n  const handleBad = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGood}>good</button>\n      <button onClick={handleNeutral}>neutral</button>\n      <button onClick={handleBad}>bad</button>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}